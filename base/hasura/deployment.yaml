apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hasura
  name: hasura
  namespace: 5stack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hasura
  template:
    metadata:
      labels:
        app: hasura
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: 5stack-hasura
                operator: In
                values:
                  - "true"
      containers:
        - image: hasura/graphql-engine:v2.43.0-ce.cli-migrations-v3
          name: hasura
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: hasura-secrets  
          env:
            - name: HASURA_GRAPHQL_CONFIGURED_HEADER_PRECEDENCE
              value: "true"
            - name: HASURA_GRAPHQL_DEV_MODE
              value: "true"
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: "true"
            - name: HASURA_GRAPHQL_STRINGIFY_NUMERIC_TYPES
              value: "true"
            - name: HASURA_GRAPHQL_AUTH_HOOK
              value: "http://api:5585/hasura"
            - name: HASURA_GRAPHQL_EVENT_HOOK
              value: "http://api:5585/hasura/events"
            - name: HASURA_GRAPHQL_ACTIONS_HOOK
              value: "http://api:5585/hasura/actions"
            - name: HASURA_GRAPHQL_LOG_LEVEL
              value: "warn"
            - name: HASURA_GRAPHQL_ENABLE_TELEMETRY
              value: "false"
            - name: HASURA_GRAPHQL_METADATA_DIR
              value: /app/hasura/metadata
            - name: HASURA_GRAPHQL_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: timescaledb-secrets
                  key: POSTGRES_CONNECTION_STRING
          volumeMounts:
            - mountPath: /app
              name: workdir
      initContainers:
        - name: migrations
          image: ghcr.io/leonaaardob/api:latest
          command:
            - /bin/sh
            - -c
            - |
              cp -r /opt/5stack/hasura /app &&
              node dist/src/main.js
          envFrom:
            - configMapRef:
                name: api-config
            - secretRef:  
                name: api-secrets
            - secretRef:  
                name: steam-secrets
            - secretRef:
                name: hasura-secrets
            - secretRef:  
                name: typesense-secrets
            - secretRef:
                name: discord-secrets
            - secretRef:
                name: redis-secrets
            - secretRef:
                name: timescaledb-secrets
            - configMapRef:
                name: s3-config
          env:
            - name: RUN_MIGRATIONS
              value: "true"
          volumeMounts:
            - mountPath: /app
              name: workdir
      volumes:
        - emptyDir: {}
          name: workdir
        - name: timescaledb-secrets
          secret:
            secretName: timescaledb-secrets